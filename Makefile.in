#############################################################
#
#   << Makefile for gogo-no-coda >>
#
#   Copyright (C)2001,2002,2003 K.Sakai
#   Copyright (C)2001,2002,2003 T.Narita
#   Copyright (C)2001,2002,2003 gogo-developer
#
#############################################################


EXEEXT	=	
OBJEXT	=	o
TARGET	=	gogo$(EXEEXT)
exec_prefix =	@prefix@
INSTDIR	=	@bindir@
USE_LIBSNDIO	=	@USE_LIBSNDIO@

SRCS.C	=	main.c thread.c gogo_io.c bitstream.c fft.c gogo.c \
		newmdct.c quantize.c reservoir.c takehiro.c util.c \
		get_audio.c lame.c psymodel.c quantize_pvt.c \
		tables.c tool.c vbrtag.c cpu.c setup.c

ifeq ($(USE_LIBSNDIO),yes)
SRCS.LIBSND.C = \
	libsnd_io.c \
	au.c \
	wav_ms_adpcm.c \
	pcm.c \
	wav_ima_adpcm.c \
	wav_gsm610.c \
	sndfile.c \
	raw.c \
	paf.c \
	au_g72x.c \
	wav.c \
	svx.c \
	aiff.c \
	common.c \
	voc.c \
	ulaw.c \
	samplitude.c \
	alaw.c \
	nist.c \
	float32.c \
	ircam.c \
	g72x.c \
	g721.c \
	g723_16.c \
	g723_24.c \
	g723_40.c \
	add.c \
	code.c \
	gsm_create.c \
	decode.c \
	gsm_decode.c \
	gsm_encode.c \
	long_term.c \
	preprocess.c \
	short_term.c \
	gsm_destroy.c \
	gsm_option.c \
	lpc.c \
	rpe.c \
	table.c 
else
SRCS.LIBSND.C = 
endif



SRCS.A	=	cpua.nas choose_table.nas gogo2_fht.nas psy3dn.nas \
		mdct3dn.nas psysse.nas quantizea.nas clka.nas fftsse.nas \
		mdctsse.nas psymodela.nas quant3dn.nas \
		sbandfpu.nas sbandsse.nas sband3dn.nas sbandtbl.nas vars.nas \

OBJS	=	$(SRCS.C:.c=.$(OBJEXT)) $(SRCS.LIBSND.C:.c=.$(OBJEXT)) $(SRCS.A:.nas=.$(OBJEXT))
VPATH	=	linux:engine:engine/i386::file_io:file_io/libsnd:file_io/libsnd/G72x:file_io/libsnd/GSM610

CC	=	@CC@
DEFS	=	@DEFS@
LIBS	=	@LIBS@
NASM	=	@NASM@
STRIP	=	@STRIP@
RM	=	@RM@ -f
INCA	=	-i./engine/i386/
INC	=	-I./engine/ -I./engine/i386/ -I./file_io/libsnd

AFLAGS	=	$(INCA) @AFLAGS@ -D__unix__ $(E3DN)

ifeq ($(USE_LIBSNDIO),yes)
DEFS	+=	-DUSE_LIBSNDIO
endif

CFLAGS	=	-c $(INC) @CFLAGS@ \
		-DLAMEPARSE -DLAMESNDFILE \
		-DUSE_X86ASM -DUSE_PTHREAD \
		$(DEFS)

INSTALL =	@INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA =	@INSTALL_DATA@




all:	$(TARGET)

$(TARGET) : Makefile $(OBJS)
	$(CC) $(OBJS) -o $@ $(LIBS)

install: $(TARGET)
	$(INSTALL_PROGRAM) $< $(INSTDIR)/

#	$(STRIP) $(INSTDIR)/$(TARGET)

uninstall:
	$(RM) $(INSTDIR)/$(TARGET)

clean:
	$(RM) $(OBJS) $(TARGET)

mostlyclean:
	$(RM) $(OBJS)

distclean: clean
	make -C linux clean
	$(RM) Makefile config.h config.cache config.log config.status global.cfg engine/i386/global.cfg 
	$(RM) -r -f bin win/*.obj win/*.o win/*.exe win/*.aps win/*.dll win/gogo.*
	$(RM) -r -f CVS */CVS */*/CVS */*/*/CVS
	$(RM) -r -f .cvs* */.cvs* */*/.cvs* */*/*/.cvs*
	$(RM) -r -f .\#* */.\#* */*/.\#* */*/*/.\#*
	$(RM) -r -f engine/i386/*.exe engine/i386/*.o engine/i386/Release engine/i386/Debug
	$(RM) -r -f engine/i386/makecfg.ilk engine/i386/makecfg.pdb engine/i386/makecfg.plg
	$(RM) *.plg *.opt *.ncb *.vcproj *.suo *.sln *.tgz
	$(RM) \\$$PostBuild.bat 

ARCNAME = petit313
distribution: distclean
	qkc -e -u *.c */*.c */*/*.c */*/*/*.c
	qkc -e -u *.h */*.h */*/*.h */*/*/*.h
	qkc -e -u gogo.spec 
	qkc -e -u *.in
	qkc -s -m gogo*.ds*
	chmod ugo+rx install-sh
	autoconf
	{ cd ..; $(RM) $(ARCNAME).tgz; tar cvfz $(ARCNAME).tgz $(ARCNAME) }
	qkc -s -m *.c */*.c */*/*.c */*/*/*.c
	qkc -s -m *.h */*.h */*/*.h */*/*/*.h
	{ cd ..; $(RM) $(ARCNAME).zip; zip -9 -r $(ARCNAME).zip $(ARCNAME) }

test: $(TARGET)
	./$(TARGET) -test 10 -q 0
	./$(TARGET) -test 10 -q 5
	./$(TARGET) -test 10 -q 9
	./$(TARGET) -test 10 -a -q 0 -b 160
	./$(TARGET) -test 10 -a -q 5 -b 192
	./$(TARGET) -test 10 -a -q 9 -b 256
	./$(TARGET) -test 10 -v 0 -vb 40 256
	./$(TARGET) -test 10 -v 5 -q 1
	./$(TARGET) -test 10 -v 9 -vb 160 320
	./$(TARGET) -test 10 -s 2 -b 64
	./$(TARGET) -test 10 -s 999 -b 32

global.cfg :	common.h global.h thread.h l3side.h quantize_pvt.h tables.h vbrtag.h makecfg.c
	$(CC) engine/i386/makecfg.c -o makecfg
	./makecfg > global.cfg
	$(RM) makecfg 

.SUFFIXES: .nas .c .$(OBJEXT)
.nas.$(OBJEXT):
	$(NASM) $(AFLAGS) $< -o $@

.c.$(OBJEXT):
	$(CC) $(CFLAGS) $< -o $@

#-----------------------------------------------------------------#
cpua.$(OBJEXT):         cpua.nas 	nasm.cfg global.cfg
clka.$(OBJEXT):         clka.nas 	nasm.cfg global.cfg
choose_table.$(OBJEXT): choose_table.nas nasm.cfg global.cfg
quantizea.$(OBJEXT):    quantizea.nas 	nasm.cfg global.cfg
quant3dn.$(OBJEXT):     quant3dn.nas 	nasm.cfg global.cfg
sbandfpu.$(OBJEXT):     sbandfpu.nas 	nasm.cfg global.cfg
sbandsse.$(OBJEXT):     sbandsse.nas 	nasm.cfg global.cfg
sband3dn.$(OBJEXT):     sband3dn.nas 	nasm.cfg global.cfg
sbandtbl.$(OBJEXT):     sbandtbl.nas 	nasm.cfg global.cfg
cpu.$(OBJEXT):          cpu.c 		common.h cpu.h gogo.h global.h
vars.$(OBJEXT):         vars.nas 	global.cfg
psymodela.$(OBJEXT):    psymodela.nas 	nasm.cfg global.cfg
psysse.$(OBJEXT):       psysse.nas 	nasm.cfg global.cfg
psy3dn.$(OBJEXT):       psy3dn.nas 	nasm.cfg global.cfg
gogo2_fht.$(OBJEXT):    gogo2_fht.nas	nasm.cfg global.cfg
fftsse.$(OBJEXT):       fftsse.nas 	nasm.cfg global.cfg
mdctsse.$(OBJEXT):      mdctsse.nas 	nasm.cfg global.cfg
thread.$(OBJEXT) :      thread.c       config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h ../pthread/thread.c
bitstream.$(OBJEXT):    bitstream.c    config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h lame.h util.h tables.h bitstream.h quantize.h quantize_pvt.h
fft.$(OBJEXT):          fft.c          config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h fft.h vfta.h
get_audio.$(OBJEXT):    get_audio.c    config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h lame.h get_audio.h tool.h gogo_io.h vfta.h
gogo.$(OBJEXT):         gogo.c         config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h lame.h get_audio.h cpu.h tool.h gogo_io.h encoder.c version.h vfta.h
lame.$(OBJEXT):         lame.c         config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h lame.h util.h bitstream.h tables.h quantize_pvt.h vbrtag.h
newmdct.$(OBJEXT):      newmdct.c      config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h newmdct.h vfta.h
psymodel.$(OBJEXT):     psymodel.c     config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h psymodel.h tables.h vfta.h
quantize.$(OBJEXT):     quantize.c     config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h quantize.h reservoir.h quantize_pvt.h vfta.h
quantize_pvt.$(OBJEXT): quantize_pvt.c config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h tables.h reservoir.h quantize_pvt.h vfta.h
reservoir.$(OBJEXT):    reservoir.c    config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h reservoir.h
tables.$(OBJEXT):       tables.c       config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h tables.h
takehiro.$(OBJEXT):     takehiro.c     config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h tables.h quantize_pvt.h vfta.h
tool.$(OBJEXT):         tool.c         config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h tool.h lame.h vbrtag.h gogo_io.h
util.$(OBJEXT):         util.c         config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h util.h
vbrtag.$(OBJEXT):       vbrtag.c       config.h global.h common.h gogo.h l3side.h encoder.h machine.h thread.h vbrtag.h bitstream.h
setup.$(OBJEXT): cpu.h       quantize_pvt.h
